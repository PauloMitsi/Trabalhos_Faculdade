package GUI;

// Projeto Maximus Bank 
// Paulo Cesar De Oliveira Mitsi | RA: 2410362
// Guilherme Munhos Matos | RA: 2266385
// Apache NetBeans IDE 15 - JDK-18.0.2.1
import DAO.ClienteDAO;
import DAO.ContaDAO;
import Modelo.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import jdk.jfr.Period;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author PauloMitsi
 */
public class Sistema extends javax.swing.JFrame {

    private static Sistema ROI;
    protected ContaDAO cDAO = new ContaDAO();
    protected ClienteDAO cliDAO = new ClienteDAO();
    private static Connection bd = new Factory.ConnectionFactory().getConnection("MaximusBank");

    public static Sistema getSistema() {
        if (ROI == null) {
            ROI = new Sistema();
        }
        return ROI;
    }

    /**
     * Creates new form CadConta
     */
    public Sistema() {
        initComponents();
        atualizaContas();
        titSis.setText("Banco " + Principal.getBanco().getNome());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titSis = new javax.swing.JLabel();
        jTOpera = new javax.swing.JTabbedPane();
        pContas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tContas = new javax.swing.JTable();
        btAddCont = new javax.swing.JButton();
        btDel = new javax.swing.JButton();
        btEdiConta = new javax.swing.JButton();
        pDep = new javax.swing.JPanel();
        cbContas = new javax.swing.JComboBox<>();
        btDep = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cxDeposit = new javax.swing.JTextField();
        cxSaldDep = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pSaque = new javax.swing.JPanel();
        cbContasSaq = new javax.swing.JComboBox<>();
        btSaq = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cxSaque = new javax.swing.JTextField();
        cxSaldSaq = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        pEmprestimo = new javax.swing.JPanel();
        cbContasEmp = new javax.swing.JComboBox<>();
        btEmp = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cxEmp = new javax.swing.JTextField();
        cxSaldEmp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cxDividaEmp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pTransfe = new javax.swing.JPanel();
        cbContasTranOri = new javax.swing.JComboBox<>();
        btSaq1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cxTran = new javax.swing.JTextField();
        cxSaldTranOri = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbContasTranDest = new javax.swing.JComboBox<>();
        cxSaldTranDest = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        pOutros = new javax.swing.JPanel();
        cbContasOut = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cxDividaOut = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        cxOutValDiv = new javax.swing.JTextField();
        btPagDiv = new javax.swing.JToggleButton();
        jLabel23 = new javax.swing.JLabel();
        cxSaldoOut = new javax.swing.JTextField();
        btPagTodDiv = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        titSec = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Bancário");

        titSis.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        titSis.setText("Placeholder");

        jTOpera.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pContas.setBackground(new java.awt.Color(229, 229, 229));
        pContas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pContas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pContasComponentShown(evt);
            }
        });

        tContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titular", "CPF", "Conta", "Agência", "Numero", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tContas);

        btAddCont.setText("Adicionar conta");
        btAddCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddContActionPerformed(evt);
            }
        });

        btDel.setText("Deletar");
        btDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelActionPerformed(evt);
            }
        });

        btEdiConta.setText("Editar");
        btEdiConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEdiContaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pContasLayout = new javax.swing.GroupLayout(pContas);
        pContas.setLayout(pContasLayout);
        pContasLayout.setHorizontalGroup(
            pContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContasLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(pContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addGroup(pContasLayout.createSequentialGroup()
                        .addComponent(btDel)
                        .addGap(20, 20, 20)
                        .addComponent(btAddCont)
                        .addGap(20, 20, 20)
                        .addComponent(btEdiConta)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        pContasLayout.setVerticalGroup(
            pContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDel)
                    .addComponent(btAddCont)
                    .addComponent(btEdiConta))
                .addGap(10, 10, 10))
        );

        jTOpera.addTab("Contas", pContas);

        pDep.setBackground(new java.awt.Color(229, 229, 229));
        pDep.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pDep.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pDepComponentShown(evt);
            }
        });

        cbContas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasItemStateChanged(evt);
            }
        });
        cbContas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbContasActionPerformed(evt);
            }
        });

        btDep.setText("Depositar");
        btDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDepActionPerformed(evt);
            }
        });

        jLabel1.setText("Contas");

        jLabel2.setText("Insira a quantia");

        cxDeposit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cxDepositKeyTyped(evt);
            }
        });

        jLabel7.setText("Saldo");

        javax.swing.GroupLayout pDepLayout = new javax.swing.GroupLayout(pDep);
        pDep.setLayout(pDepLayout);
        pDepLayout.setHorizontalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btDep)
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(cbContas, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(cxDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addComponent(cxSaldDep, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pDepLayout.setVerticalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(cxDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxSaldDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(50, 50, 50)
                .addComponent(btDep)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTOpera.addTab("Depósito", pDep);

        pSaque.setBackground(new java.awt.Color(229, 229, 229));
        pSaque.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pSaque.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pSaqueComponentShown(evt);
            }
        });

        cbContasSaq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasSaqItemStateChanged(evt);
            }
        });

        btSaq.setText("Sacar");
        btSaq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaqActionPerformed(evt);
            }
        });

        jLabel4.setText("Contas");

        jLabel5.setText("Insira a quantia");

        cxSaque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cxSaqueKeyTyped(evt);
            }
        });

        jLabel9.setText("Saldo");

        javax.swing.GroupLayout pSaqueLayout = new javax.swing.GroupLayout(pSaque);
        pSaque.setLayout(pSaqueLayout);
        pSaqueLayout.setHorizontalGroup(
            pSaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSaqueLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pSaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btSaq)
                    .addGroup(pSaqueLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(cbContasSaq, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pSaqueLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(8, 8, 8)
                        .addComponent(cxSaque, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(cxSaldSaq, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pSaqueLayout.setVerticalGroup(
            pSaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSaqueLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(pSaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbContasSaq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(pSaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(cxSaque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxSaldSaq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(50, 50, 50)
                .addComponent(btSaq)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTOpera.addTab("Saque", pSaque);

        pEmprestimo.setBackground(new java.awt.Color(229, 229, 229));
        pEmprestimo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pEmprestimo.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pEmprestimoComponentShown(evt);
            }
        });

        cbContasEmp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasEmpItemStateChanged(evt);
            }
        });

        btEmp.setText("Emprestar");
        btEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEmpActionPerformed(evt);
            }
        });

        jLabel6.setText("Contas");

        jLabel8.setText("Insira a quantia");

        cxEmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cxEmpKeyTyped(evt);
            }
        });

        jLabel10.setText("Saldo");

        jLabel3.setText("Divida");

        javax.swing.GroupLayout pEmprestimoLayout = new javax.swing.GroupLayout(pEmprestimo);
        pEmprestimo.setLayout(pEmprestimoLayout);
        pEmprestimoLayout.setHorizontalGroup(
            pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEmprestimoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btEmp)
                    .addGroup(pEmprestimoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(cbContasEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pEmprestimoLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(8, 8, 8)
                        .addComponent(cxEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel3))
                        .addGap(6, 6, 6)
                        .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cxSaldEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(cxDividaEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pEmprestimoLayout.setVerticalGroup(
            pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEmprestimoLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbContasEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(cxEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pEmprestimoLayout.createSequentialGroup()
                        .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(cxSaldEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(6, 6, 6)
                        .addGroup(pEmprestimoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxDividaEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btEmp)
                .addGap(95, 95, 95))
        );

        jTOpera.addTab("Emprestimo", pEmprestimo);

        pTransfe.setBackground(new java.awt.Color(229, 229, 229));
        pTransfe.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pTransfe.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pTransfeComponentShown(evt);
            }
        });

        cbContasTranOri.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasTranOriItemStateChanged(evt);
            }
        });

        btSaq1.setText("Transferir");
        btSaq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaq1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Conta Origem");

        jLabel12.setText("Insira a quantia");

        cxTran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cxTranKeyTyped(evt);
            }
        });

        jLabel13.setText("Saldo Origem");

        jLabel14.setText("Conta Destino");

        cbContasTranDest.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasTranDestItemStateChanged(evt);
            }
        });

        jLabel15.setText("Saldo Destino");

        javax.swing.GroupLayout pTransfeLayout = new javax.swing.GroupLayout(pTransfe);
        pTransfe.setLayout(pTransfeLayout);
        pTransfeLayout.setHorizontalGroup(
            pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTransfeLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTransfeLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(8, 8, 8)
                        .addComponent(cxTran, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(pTransfeLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(4, 4, 4)
                                .addComponent(cxSaldTranOri, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pTransfeLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(4, 4, 4)
                                .addComponent(cxSaldTranDest, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pTransfeLayout.createSequentialGroup()
                            .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel11))
                            .addGap(7, 7, 7)
                            .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbContasTranOri, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbContasTranDest, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btSaq1, javax.swing.GroupLayout.Alignment.CENTER)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pTransfeLayout.setVerticalGroup(
            pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTransfeLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbContasTranOri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbContasTranDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pTransfeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(cxSaldTranOri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(10, 10, 10)
                        .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(cxSaldTranDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTransfeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pTransfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel12)
                            .addComponent(cxTran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)))
                .addComponent(btSaq1)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTOpera.addTab("Transferência", pTransfe);

        pOutros.setBackground(new java.awt.Color(229, 229, 229));
        pOutros.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pOutros.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pOutrosComponentShown(evt);
            }
        });

        cbContasOut.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasOutItemStateChanged(evt);
            }
        });

        jLabel20.setText("Contas");

        jLabel21.setText("Divida");

        jLabel22.setText("Valor");

        cxOutValDiv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cxOutValDivKeyTyped(evt);
            }
        });

        btPagDiv.setText("Pagar Divida");
        btPagDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagDivActionPerformed(evt);
            }
        });

        jLabel23.setText("Saldo");

        btPagTodDiv.setText("Pagar Toda Divida");
        btPagTodDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagTodDivActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pOutrosLayout = new javax.swing.GroupLayout(pOutros);
        pOutros.setLayout(pOutrosLayout);
        pOutrosLayout.setHorizontalGroup(
            pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOutrosLayout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(pOutrosLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cxSaldoOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pOutrosLayout.createSequentialGroup()
                        .addComponent(btPagDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btPagTodDiv))
                    .addGroup(pOutrosLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(cbContasOut, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pOutrosLayout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cxDividaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pOutrosLayout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cxOutValDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        pOutrosLayout.setVerticalGroup(
            pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOutrosLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbContasOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(21, 21, 21)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(cxSaldoOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cxDividaOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(cxOutValDiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(pOutrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPagDiv)
                    .addComponent(btPagTodDiv))
                .addGap(61, 61, 61))
        );

        jTOpera.addTab("Outros", pOutros);

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        titSec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titSec.setText("Placeholder2");
        titSec.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jTOpera)
                        .addComponent(btSair))
                    .addComponent(titSec, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titSis, javax.swing.GroupLayout.Alignment.CENTER))
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titSis)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titSec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jTOpera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelActionPerformed
        deletaContaSelec();
    }//GEN-LAST:event_btDelActionPerformed

    private void btAddContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddContActionPerformed
        atualizaContas();
        abreCadCliente();
    }//GEN-LAST:event_btAddContActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void btDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDepActionPerformed
        deposiConta();
        mostraSaldoDep();
    }//GEN-LAST:event_btDepActionPerformed

    private void pDepComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pDepComponentShown
        attCbContaDep();
        attPlacHol("Seção Depositar");
    }//GEN-LAST:event_pDepComponentShown

    private void cxDepositKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxDepositKeyTyped
        veriDig(evt);
    }//GEN-LAST:event_cxDepositKeyTyped

    private void pContasComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pContasComponentShown
        atualizaContas();
        attPlacHol("Seção Contas");
    }//GEN-LAST:event_pContasComponentShown

    private void pSaqueComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pSaqueComponentShown
        attCbContaSaq();
        attPlacHol("Seção Saque");
    }//GEN-LAST:event_pSaqueComponentShown

    private void cbContasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasItemStateChanged
        mostraSaldoDep();
    }//GEN-LAST:event_cbContasItemStateChanged

    private void cbContasSaqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasSaqItemStateChanged
        mostraSaldoSaq();
    }//GEN-LAST:event_cbContasSaqItemStateChanged

    private void btSaqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaqActionPerformed
        saqueConta();
        mostraSaldoSaq();
    }//GEN-LAST:event_btSaqActionPerformed

    private void cxSaqueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxSaqueKeyTyped
        veriDig(evt);
    }//GEN-LAST:event_cxSaqueKeyTyped

    private void cbContasEmpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasEmpItemStateChanged
        mostraSaldoEmp();
        mostraDivEmp();
    }//GEN-LAST:event_cbContasEmpItemStateChanged

    private void btEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEmpActionPerformed
        empreConta();
        mostraDivEmp();
        mostraSaldoEmp();
    }//GEN-LAST:event_btEmpActionPerformed

    private void cxEmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxEmpKeyTyped
        veriDig(evt);
    }//GEN-LAST:event_cxEmpKeyTyped

    private void pEmprestimoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pEmprestimoComponentShown
        mostraSaldoEmp();
        mostraDivEmp();
        attCbContaEmp();
        attPlacHol("Seção Emprestimo");
    }//GEN-LAST:event_pEmprestimoComponentShown

    private void cbContasTranOriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasTranOriItemStateChanged
        mostraSaldoTranOri();
    }//GEN-LAST:event_cbContasTranOriItemStateChanged

    private void btSaq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaq1ActionPerformed
        transfereContas();
        mostraSaldoTranDest();
        mostraSaldoTranOri();
    }//GEN-LAST:event_btSaq1ActionPerformed

    private void cxTranKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxTranKeyTyped
        veriDig(evt);
    }//GEN-LAST:event_cxTranKeyTyped

    private void cbContasTranDestItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasTranDestItemStateChanged
        mostraSaldoTranDest();
    }//GEN-LAST:event_cbContasTranDestItemStateChanged

    private void pTransfeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pTransfeComponentShown
        attCbContaOri();
        attCbContaDest();
        attPlacHol("Seção Tranferência");// TODO add your handling code here:
    }//GEN-LAST:event_pTransfeComponentShown

    private void cbContasOutItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasOutItemStateChanged
        mostraDivOut();
        mostraSaldoOut();
    }//GEN-LAST:event_cbContasOutItemStateChanged

    private void pOutrosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pOutrosComponentShown
        attCbContaRen();
        mostraDivOut();
        mostraSaldoOut();
        attPlacHol("Seção Outros");
    }//GEN-LAST:event_pOutrosComponentShown

    private void btPagDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagDivActionPerformed
        pagDiv();
        mostraDivOut();
        mostraSaldoOut();
    }//GEN-LAST:event_btPagDivActionPerformed

    private void btPagTodDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagTodDivActionPerformed
        pagTodDiv();
        mostraDivOut();
        mostraSaldoOut();
    }//GEN-LAST:event_btPagTodDivActionPerformed

    private void cxOutValDivKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxOutValDivKeyTyped
        veriDig(evt);
    }//GEN-LAST:event_cxOutValDivKeyTyped

    private void btEdiContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEdiContaActionPerformed
        editConta();
    }//GEN-LAST:event_btEdiContaActionPerformed

    private void cbContasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbContasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbContasActionPerformed

//================================
//=============Funções============
//================================
    public void veriDig(java.awt.event.KeyEvent evt) {
        char k = evt.getKeyChar();

        if (k == ',' || k == '.') {
            evt.setKeyChar((char) evt.VK_PERIOD);
        } else if (!Character.isDigit(k)) {
            evt.setKeyChar((char) evt.VK_NONCONVERT);
        }
    }

    public void sair() {
        int sair = JOptionPane.showConfirmDialog(null,
                "Deseja realmente sair?",
                "Confirmar saida",
                JOptionPane.YES_NO_OPTION);

        if (sair == 0) {
            dispose();
        }
    }

    public void attPlacHol(String s) {
        titSec.setText(s);
    }

//================================
//===========Aba contas===========
//================================
    public void deletaContaSelec() {
        DefaultTableModel dtm = (DefaultTableModel) tContas.getModel();
        int rSel = tContas.getSelectedRow();

        if (rSel < 0) {
            JOptionPane.showMessageDialog(null,
                    "Selecione uma conta para ser deletada!",
                    "deletar erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {

            int vaiDele = JOptionPane.showConfirmDialog(null,
                    "Deseja deletar " + dtm.getValueAt(rSel, 1),
                    "Conta deletar",
                    JOptionPane.YES_NO_OPTION);

            if (vaiDele == 0) {
                String sql = String.format("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf) where cpf = '%s' and agencia ='%d' and numero ='%d'",
                        dtm.getValueAt(rSel, 1),
                        Integer.parseInt(dtm.getValueAt(rSel, 3).toString()),
                        Integer.parseInt(dtm.getValueAt(rSel, 4).toString())
                );

                try {

                    Statement stmt = bd.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    rs.next();

                    try {
                        cDAO.remove(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                        cliDAO.remove(new Cliente(rs.getString("nome"), rs.getInt("idade"), rs.getString("cpf")));
                    } catch (Exception ex) {
                        Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    dtm.removeRow(rSel);

                    atualizaContas();

                    JOptionPane.showMessageDialog(null,
                            "Conta deletada com sucesso!",
                            "Conta deletada",
                            JOptionPane.PLAIN_MESSAGE
                    );
                } catch (SQLException ex) {
                    Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public void abreCadCliente() {
        new CadCliente().getCadCliente().setVisible(true);
    }

    public void atualizaContas() {

        try {
            ResultSet contas = bd.createStatement().executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            DefaultTableModel dtm = (DefaultTableModel) tContas.getModel();

            int qtdLin = dtm.getRowCount();

            for (int i = 0; i < qtdLin; i++) {
                dtm.removeRow(0);
            }

            while (contas.next()) {
                dtm.addRow(new Object[]{
                    contas.getString("nome"),
                    contas.getString("cpf"),
                    contas.getString("conta_tipo"),
                    contas.getInt("agencia"),
                    contas.getInt("numero"),
                    String.format("%.2f", contas.getFloat("saldo"))});
            }
            contas.close();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void editConta() {
        DefaultTableModel dtm = (DefaultTableModel) tContas.getModel();
        int rSel = tContas.getSelectedRow();

        if (rSel < 0) {
            JOptionPane.showMessageDialog(null,
                    "Selecione uma conta para ser editada!",
                    "editar erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {
            int vaiEdi = JOptionPane.showConfirmDialog(null,
                    "Deseja editar " + dtm.getValueAt(rSel, 0),
                    "Conta editar",
                    JOptionPane.YES_NO_OPTION);

            if (vaiEdi == 0) {
                new EditCliente(ContaDAO.search(dtm.getValueAt(rSel, 1).toString(),
                        Integer.parseInt(dtm.getValueAt(rSel, 3).toString()),
                        Integer.parseInt(dtm.getValueAt(rSel, 4).toString()))).setVisible(true);
            }
        }

    }

    //================================
    //==========Aba Deposito==========
    //================================
    public void attCbContaDep() {

        try {
            int comboMax = cbContas.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContas.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContas.addItem(cF);
            }
            rs.close();
            stmt.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void deposiConta() {
        Conta cSel = null;
        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSel = cbContas.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cSel = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            double val = Double.parseDouble(cxDeposit.getText());
            cSel.depositar(val);
            cDAO.updateSaldo(cSel);

            JOptionPane.showMessageDialog(null,
                    "Deposito realizado com sucesso!",
                    "Deposito",
                    JOptionPane.PLAIN_MESSAGE
            );
        } catch (QtdNegException ex) {
            JOptionPane.showMessageDialog(null,
                    "A quantia deve ser positiva!",
                    "Depositar erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Insira uma quantia correta!",
                    "Depositar erro",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    public void mostraSaldoDep() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContas.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldDep.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
//================================    
//============Aba Saque===========
//================================

    public void attCbContaSaq() {
        try {
            int comboMax = cbContasSaq.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContasSaq.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContasSaq.addItem(cF);
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void saqueConta() {
        Conta cSel = null;
        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSel = cbContasSaq.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cSel = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        try {

            double val = Double.parseDouble(cxSaque.getText());
            cSel.sacar(val);
            cDAO.updateSaldo(cSel);

            JOptionPane.showMessageDialog(null,
                    "Saque realizado com sucesso!",
                    "Saque",
                    JOptionPane.PLAIN_MESSAGE
            );
        } catch (SaldoInsuficienteException ex) {
            JOptionPane.showMessageDialog(null,
                    "Saldo insuficiente para o saque!",
                    "Saque erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } catch (QtdNegException ex) {
            JOptionPane.showMessageDialog(null,
                    "A quantia deve ser positiva!",
                    "Saque erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Insira uma quantia correta!",
                    "Saque erro",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    public void mostraSaldoSaq() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasSaq.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldSaq.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//================================
//=========Aba Emprestimo=========
//================================

    public void empreConta() {
        Conta cSel = null;
        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSel = cbContasEmp.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cSel = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            double val = Double.parseDouble(cxEmp.getText());
            Principal.getBanco().emprestimo(cSel, val);

            cDAO.updateSaldo(cSel);
            cDAO.updateDivida(cSel);

            JOptionPane.showMessageDialog(null,
                    "Emprestimo realizado com sucesso!",
                    "Emprestimo",
                    JOptionPane.PLAIN_MESSAGE
            );

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,
                    "Insira uma quantia correta!",
                    "Emprestimo erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } catch (QtdNegException ex) {
            JOptionPane.showMessageDialog(null,
                    "A quantia deve ser positiva!",
                    "Emprestimo erro",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    public void attCbContaEmp() {
        try {
            int comboMax = cbContasEmp.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContasEmp.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContasEmp.addItem(cF);
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraSaldoEmp() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasEmp.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldEmp.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraDivEmp() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select divida from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasEmp.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxDividaEmp.setText(String.format("R$ %.2f", rs.getDouble("divida")));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//================================
//========Aba Transferencia=======
//================================

    public void attCbContaOri() {
        try {
            int comboMax = cbContasTranOri.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContasTranOri.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContasTranOri.addItem(cF);
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void attCbContaDest() {
        try {
            int comboMax = cbContasTranDest.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContasTranDest.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContasTranDest.addItem(cF);
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraSaldoTranOri() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasTranOri.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldTranOri.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraSaldoTranDest() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasTranDest.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldTranDest.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void transfereContas() {
        Conta ContOri = null;
        Conta ContDest = null;

        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSelDest = cbContasTranDest.getSelectedIndex();
            int conSelOri = cbContasTranOri.getSelectedIndex();

            while (rs.next()) {
                if (conSelOri == rs.getRow() - 1) {
                    ContOri = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

            rs.close();
            rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            while (rs.next()) {
                if (conSelDest == rs.getRow() - 1) {
                    ContDest = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }
            rs.close();
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (ContOri.equals(ContDest)) {
            JOptionPane.showMessageDialog(null,
                    "Selecione contas diferentes!",
                    "Trasnferencia erro",
                    JOptionPane.ERROR_MESSAGE
            );
        } else {

            try {
                double val = Double.parseDouble(cxTran.getText());
                ContOri.transferir(ContDest, val);

                cDAO.updateSaldo(ContOri);
                cDAO.updateSaldo(ContDest);

                JOptionPane.showMessageDialog(null,
                        "Transferencia realizada com sucesso!",
                        "Tranferência",
                        JOptionPane.PLAIN_MESSAGE
                );

            } catch (QtdNegException ex) {
                JOptionPane.showMessageDialog(null,
                        "Insira uma quantia positiva!",
                        "Transferência erro",
                        JOptionPane.ERROR_MESSAGE
                );
            } catch (SaldoInsuficienteException ex) {
                JOptionPane.showMessageDialog(null,
                        "Saldo da Conta origem insuficiente!",
                        "Transferência erro",
                        JOptionPane.ERROR_MESSAGE
                );
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null,
                        "Insira uma quantia correta!",
                        "Transferência erro",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }
//================================
//===========Aba Outros===========
//================================

    public void attCbContaRen() {
        try {
            int comboMax = cbContasOut.getItemCount();
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            if (comboMax > 0) {
                for (int i = 0; i < comboMax; i++) {
                    cbContasOut.removeItemAt(0);
                }
            }

            while (rs.next()) {
                String cF = String.format("%s | %s --- %s | %d", rs.getString("nome"), rs.getString("cpf"), rs.getString("conta_tipo"), rs.getInt("agencia"));
                cbContasOut.addItem(cF);
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraDivOut() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select divida from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasOut.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxDividaOut.setText(String.format("R$ %.2f", rs.getDouble("divida")));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mostraSaldoOut() {
        try {
            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select saldo from cliente join (select * from conta ORDER by cpf asc) using (cpf)");
            int conSel = cbContasOut.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cxSaldoOut.setText(String.format("R$ %.2f", rs.getDouble("saldo")));
                }
            }
            stmt.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void pagDiv() {
        Conta cSel = null;

        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSel = cbContasOut.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cSel = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        if (cSel.getDivida() == 0) {
            JOptionPane.showMessageDialog(null,
                    "Essa Conta não possue divida!",
                    "Divida",
                    JOptionPane.PLAIN_MESSAGE
            );
        } else {
            try {
                double val = Double.parseDouble(cxOutValDiv.getText());

                cSel.sacar(val);
                cSel.setDivida(-val);
                cDAO.updateSaldo(cSel);
                cDAO.updateDivida(cSel);

                JOptionPane.showMessageDialog(null,
                        "Valor descontado da divida!",
                        "Divida Paga",
                        JOptionPane.PLAIN_MESSAGE
                );
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null,
                        "Insira um valor correto",
                        "Divida erro",
                        JOptionPane.ERROR_MESSAGE
                );
            } catch (SaldoInsuficienteException | QtdNegException ex) {
                JOptionPane.showMessageDialog(null,
                        "Saldo insuficiente!",
                        "Divida erro",
                        JOptionPane.ERROR_MESSAGE
                );;
            }

        }
    }

    public void pagTodDiv() {
        Conta cSel = null;

        try {

            Statement stmt = bd.createStatement();
            ResultSet rs = stmt.executeQuery("select * from cliente join (select * from conta ORDER by cpf asc) using (cpf)");

            int conSel = cbContasOut.getSelectedIndex();
            while (rs.next()) {
                if (conSel == rs.getRow() - 1) {
                    cSel = ContaDAO.search(rs.getString("cpf"), rs.getInt("agencia"), rs.getInt("numero"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        double div = cSel.getDivida();

        if (div == 0) {
            JOptionPane.showMessageDialog(null,
                    "Essa Conta não possue divida!",
                    "Divida",
                    JOptionPane.PLAIN_MESSAGE
            );
        } else {
            try {
                cSel.sacar(div);
                cSel.setDivida(-div);
                cDAO.updateDivida(cSel);
                cDAO.updateSaldo(cSel);

                JOptionPane.showMessageDialog(null,
                        "divida paga!",
                        "Divida Paga",
                        JOptionPane.PLAIN_MESSAGE
                );
            } catch (SaldoInsuficienteException | QtdNegException ex) {
                JOptionPane.showMessageDialog(null,
                        "Saldo Insuficiente!",
                        "Divida erro",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }
//================================
//================================
//================================

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddCont;
    private javax.swing.JButton btDel;
    private javax.swing.JButton btDep;
    private javax.swing.JButton btEdiConta;
    private javax.swing.JButton btEmp;
    private javax.swing.JToggleButton btPagDiv;
    private javax.swing.JButton btPagTodDiv;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSaq;
    private javax.swing.JButton btSaq1;
    private javax.swing.JComboBox<String> cbContas;
    private javax.swing.JComboBox<String> cbContasEmp;
    private javax.swing.JComboBox<String> cbContasOut;
    private javax.swing.JComboBox<String> cbContasSaq;
    private javax.swing.JComboBox<String> cbContasTranDest;
    private javax.swing.JComboBox<String> cbContasTranOri;
    private javax.swing.JTextField cxDeposit;
    private javax.swing.JTextField cxDividaEmp;
    private javax.swing.JTextField cxDividaOut;
    private javax.swing.JTextField cxEmp;
    private javax.swing.JTextField cxOutValDiv;
    private javax.swing.JTextField cxSaldDep;
    private javax.swing.JTextField cxSaldEmp;
    private javax.swing.JTextField cxSaldSaq;
    private javax.swing.JTextField cxSaldTranDest;
    private javax.swing.JTextField cxSaldTranOri;
    private javax.swing.JTextField cxSaldoOut;
    private javax.swing.JTextField cxSaque;
    private javax.swing.JTextField cxTran;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTOpera;
    private javax.swing.JPanel pContas;
    private javax.swing.JPanel pDep;
    private javax.swing.JPanel pEmprestimo;
    private javax.swing.JPanel pOutros;
    private javax.swing.JPanel pSaque;
    private javax.swing.JPanel pTransfe;
    private javax.swing.JTable tContas;
    private javax.swing.JLabel titSec;
    private javax.swing.JLabel titSis;
    // End of variables declaration//GEN-END:variables
}
